package leetCode.easy

class Solution {
    /**
     * Мы можем ходить на 1 или 2
     * 3 может содержать в себе 2, то 2 возможно хотя бы один раз
     * 3 может содержать в себе 1, 1 возможно 3 раза

     * 4 содержит в себе 2 раза по два
     * 4 содержит в себе 4 раза по 1
     * 4 содержит в себе 1 раз по два и 2 раза по 1
     * Для 2-х
     * 1+1
     * 2
     * 2 варианта
     * Для 3-х
     * 1+1+1
     * 2+1
     * 1+2
     * 3 варианта
     * Для 4-х
     * 1+1+1+1
     * 2+1+1
     * 1+2+1
     * 1+1+2
     * 2+2
     * 5 вариантов
     * Для 5-ти
     * 1+1+1+1+1
     * 2+1+1+1
     * 1+2+1+1
     * 1+1+2+1
     * 1+1+1+2
     * 2+2+1
     * 2+1+2
     * 1+2+2
     * 8 вариантов
     * Для 6-ти
     * 1+1+1+1+1+1
     * 2+1+1+1+1
     * 1+2+1+1+1
     * 1+1+2+1+1
     * 1+1+1+2+1
     * 1+1+1+1+2
     * 2+2+1+1
     * 2+1+2+1
     * 2+1+1+2
     * 1+2+1+2
     * 1+1+2+2
     * 1+2+2+1
     * 2+2+2
     * 13 вариантов
     * для 7
     * 1+1+1+1+1+1+1
     * 2+1+1+1+1+1
     * 1+2+1+1+1+1
     * 1+1+2+1+1+1
     * 1+1+1+2+1+1
     * 1+1+1+1+2+1
     * 1+1+1+1+1+2
     * 2+2+1+1+1
     * 2+1+2+1+1
     * 2+1+1+2+1
     * 2+1+1+1+2
     * 1+2+2+1+1
     * 1+2+1+2+1
     * 1+2+1+1+2
     * 1+1+2+2+1
     * 1+1+2+1+2
     * 2+2+2+1
     * 2+2+1+2
     * 2+1+2+2
     * 1+2+2+2
     * 2+2+2
     * 1 двойка и количество оставшихся это варианты постановки этой двойки
     *
     * Без двое это 1 путь
     * С одной двойкой это 1+оставшееся количество единиц
     * С двумя двойками это 2 + оставшиеся количество единиц
     * Для 5-ти позицией
     * Если нет других дв0оек, то оставшуюся двойку можно поставить 5 вариантами
     * Если 1 позиция занята другой двойкой, то оставшуюся двойку можно поставить 4 вариантами
     *
     */
    fun climbStairs(n: Int): Int {
        var one = 1
        var two = 1

        for(i in 1..n-1) {
            val temp = one
            one = one+two
            two = temp
        }

        return one
    }
}

fun main(args: Array<String>) {
    println(Solution().climbStairs(2))
    println(Solution().climbStairs(3))
    println(Solution().climbStairs(4))
    println(Solution().climbStairs(5))
    println(Solution().climbStairs(6))
}